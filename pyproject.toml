[tool.poetry]
name = "loopmon"
version = "0.1.0"
description = "Lightewight monitor library for asyncio.EventLoop"
authors = ["Byeonghoon Yoo <bh322yoo@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"
typing-extensions = ">=3.8"

[tool.poetry.dev-dependencies]
flake8-black = "^0.2.4"
black = "^22.1.0"
flake8 = "^4.0.1"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
mypy = "^0.931"
pytest-mock = "^3.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
python_version = "3.10"
allow_redefinition = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
no_warn_no_return = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true


[[tool.mypy.overrides]]
module = [
    "tests.*",
]
ignore_errors = true


[tool.black]
line-length = 120
target-version = ['py37', 'py38', 'py39', 'py310']
skip-string-normalization = true


[tool.coverage.run]
omit = ['*/__init__.py',]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]


[tool.pytest.ini_options]
python_files = 'test_*.py'